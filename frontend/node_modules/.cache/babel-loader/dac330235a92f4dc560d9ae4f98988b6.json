{"ast":null,"code":"var _jsxFileName = \"/home/vitor/Documentos/Vitor/NLW/frontend/src/pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport Dropzone from '../../components/Dropzone'; //sempre que criamos um estado para uma array ou um objeto, precisamos informar manualmente\n//o tipo da variável Ex: Linha 116  \n\nconst CreatePoint = () => {\n  //useEffect(() => {}, []) / 1° parâmetro é a função que quero executar. O segundo é quando\n  //e o terceiro é a informação que vai mudar. O useEffect só vai funcionar se o 3°\n  //parâmetro for true\n  const history = useHistory();\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [selectedUF, setSelectedUF] = useState('0');\n  const [cities, setCities] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedFile, setSelectedFile] = useState();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados\").then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUF === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUF]);\n\n  function handleSelectUF(event) {\n    const uf = event.target.value;\n    setSelectedUF(uf);\n  }\n\n  ;\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  ;\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUF;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      items\n    };\n    await api.post('points', data);\n    history.push('/success-page');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }), \"Voltar para a home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onFileUploaded: setSelectedFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: [-23.1750195, -46.8543534],\n    zoom: 15,\n    onclick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\"> OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUF,\n    onChange: handleSelectUF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 36\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, \"Selecione uma Cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 36\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, \"\\xCDtens de Coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, \"Selecione um ou mais \\xEDtens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, item.title))), \" \")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/home/vitor/Documentos/Vitor/NLW/frontend/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","axios","api","Dropzone","CreatePoint","history","items","setItems","ufs","setUfs","selectedUF","setSelectedUF","cities","setCities","formData","setFormData","name","email","whatsapp","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","initialPosition","setInitialPosition","selectedItems","setSelectedItems","selectedFile","setSelectedFile","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUF","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","post","push","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, ChangeEvent, FormEvent} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {FiArrowLeft} from 'react-icons/fi';\nimport {Map, TileLayer, Marker} from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport {LeafletMouseEvent} from 'leaflet';\n\nimport './styles.css';\n\nimport logo from '../../assets/logo.svg';\n\nimport Dropzone from '../../components/Dropzone';\n\n//sempre que criamos um estado para uma array ou um objeto, precisamos informar manualmente\n//o tipo da variável Ex: Linha 116  \n\nconst CreatePoint = () => {\n    //useEffect(() => {}, []) / 1° parâmetro é a função que quero executar. O segundo é quando\n    //e o terceiro é a informação que vai mudar. O useEffect só vai funcionar se o 3°\n    //parâmetro for true\n\ninterface Item {\n    id: number;\n    title: string;\n    image_url: string;\n}\n\ninterface IBGEUFResponse {\n    sigla: string;\n}\n\ninterface IBGECityResponse{\n    nome: string;\n}\n\n    const history = useHistory();\n\n    const [items, setItems] = useState<Item[]>([]);\n    const [ufs, setUfs] = useState<string[]>([]);\n\n    const [selectedUF, setSelectedUF] = useState('0');\n    const [cities, setCities] = useState<string[]>([]);\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        whatsapp: ''\n    })\n\n    const [selectedCity, setSelectedCity] = useState('0');\n    const [selectedPosition, setSelectedPosition] = useState<[number,number]>([0, 0]);\n\n    const [initialPosition, setInitialPosition] = useState<[number,number]>([0, 0]);\n\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\n\n    const [selectedFile, setSelectedFile] = useState<File>();\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(position => {\n            const { latitude, longitude } = position.coords;\n\n            setInitialPosition([latitude, longitude]);\n        })\n    }, [])\n\n    useEffect(() => {\n        api.get('items').then(response => {\n            setItems(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        axios.get<IBGEUFResponse[]>(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados\")\n        .then(response => {\n            const ufInitials = response.data.map(uf => uf.sigla);\n\n            setUfs(ufInitials);\n        })\n    }, []);\n\n    useEffect(() => {\n        if (selectedUF === '0') {\n            return;\n        }\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`)\n        .then(response => {\n            const cityNames = response.data.map(city => city.nome);\n\n            setCities(cityNames);\n        });\n    }, [selectedUF]);\n\n    function handleSelectUF(event: ChangeEvent<HTMLSelectElement>) {\n        const uf = event.target.value;\n\n        setSelectedUF(uf);\n    };\n\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\n        const city = event.target.value;\n\n        setSelectedCity(city);\n    };\n\n    function handleMapClick(event: LeafletMouseEvent) {\n        setSelectedPosition ([\n            event.latlng.lat,\n            event.latlng.lng\n        ])\n    }\n\n    function handleInputChange (event: ChangeEvent<HTMLInputElement>) {\n        const { name, value } = event.target;\n         \n        setFormData({...formData, [name]: value})\n    }\n\n    function handleSelectItem (id: number) {\n        const alreadySelected = selectedItems.findIndex(item => item === id);\n\n        if (alreadySelected >=0) {\n            const filteredItems = selectedItems.filter(item => item !== id);\n            setSelectedItems(filteredItems);\n        }else {\n            setSelectedItems([...selectedItems, id])\n        }\n    }\n\n    async function handleSubmit(event: FormEvent) {\n        event.preventDefault();\n\n        const {name, email, whatsapp} = formData;\n        const uf = selectedUF;\n        const city = selectedCity;\n        const [latitude, longitude] = selectedPosition;\n        const items = selectedItems;\n\n        const data = {\n            name,\n            email, \n            whatsapp,\n            uf,\n            city,\n            latitude,\n            longitude,\n            items\n        };\n\n        await api.post('points', data);\n\n        history.push('/success-page');\n    }\n\n\n    return (\n        <div id=\"page-create-point\">\n            <header>\n                <img src={logo} alt=\"Ecoleta\" />\n                <Link to=\"/\">\n                    <FiArrowLeft />\n                    Voltar para a home\n                </Link>\n            </header>\n\n            <form onSubmit={handleSubmit}>\n                <h1>Cadastro do <br /> ponto de coleta</h1>\n\n                <Dropzone onFileUploaded={setSelectedFile}/>\n\n                <fieldset>\n                    <legend>\n                        <h2>Dados</h2>\n                    </legend>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"name\">Nome da entidade</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            onChange={handleInputChange}\n                        />\n                    </div>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"email\">E-mail</label>\n                            <input\n                                type=\"text\"\n                                name=\"email\"\n                                id=\"email\"\n                                onChange={handleInputChange}\n                            />\n                        </div> \n                        <div className=\"field\">\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\n                            <input\n                                type=\"text\"\n                                name=\"whatsapp\"\n                                id=\"whatsapp\"\n                                onChange={handleInputChange}\n                            />\n                        </div> \n                    </div>\n                </fieldset>\n    \n                <fieldset>\n                    <legend>\n                        <h2>Endereço</h2>\n                        <span>Selecione o endereço no mapa</span>\n                    </legend>\n\n                    <Map center={[-23.1750195, -46.8543534]} zoom={15} onclick={handleMapClick}>\n                        <TileLayer \n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">\n                        OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n\n                        <Marker position={selectedPosition} />\n                    </Map>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"uf\">Estado (UF)</label>\n                            <select name=\"uf\"\n                             id=\"uf\" \n                             value={selectedUF} \n                             onChange={handleSelectUF}>\n                                <option value=\"0\">Selecione uma UF</option>\n                                {ufs.map(uf => (\n                                   <option key = {uf} value={uf}>{uf}</option> \n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"city\">Cidade</label>\n                            <select name=\"city\" \n                            id=\"city\"\n                            value={selectedCity}\n                            onChange={handleSelectCity}>\n                                <option value=\"0\">Selecione uma Cidade</option>\n                                {cities.map(city => (\n                                   <option key={city} value={city}>{city}</option> \n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Ítens de Coleta</h2>\n                        <span>Selecione um ou mais ítens abaixo</span>\n                    </legend>\n\n                    <ul className=\"items-grid\">\n                        {items.map(item => (\n                            <li \n                            key={item.id} \n                            onClick={() => handleSelectItem(item.id)}\n                            className={selectedItems.includes(item.id) ? 'selected' : ''}\n                            >\n                            <img src={item.image_url} alt={item.title} />\n                            <span>{item.title}</span>\n                            </li>\n                        ))} {/**.map vai varrer todos os items e fazer tal coisa */}\n                    </ul>\n                </fieldset>\n\n                <button type=\"submit\">\n                    Cadastrar ponto de coleta\n                </button>\n            </form>\n        </div>\n\n    )\n};\n\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}